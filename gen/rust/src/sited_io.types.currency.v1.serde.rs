// @generated
impl serde::Serialize for CurrencyCode {
    #[allow(deprecated)]
    fn serialize<S>(&self, serializer: S) -> std::result::Result<S::Ok, S::Error>
    where
        S: serde::Serializer,
    {
        let variant = match self {
            Self::Unspecified => "CURRENCY_CODE_UNSPECIFIED",
            Self::Aed => "CURRENCY_CODE_AED",
            Self::All => "CURRENCY_CODE_ALL",
            Self::Amd => "CURRENCY_CODE_AMD",
            Self::Ang => "CURRENCY_CODE_ANG",
            Self::Aud => "CURRENCY_CODE_AUD",
            Self::Awg => "CURRENCY_CODE_AWG",
            Self::Azn => "CURRENCY_CODE_AZN",
            Self::Bam => "CURRENCY_CODE_BAM",
            Self::Bbd => "CURRENCY_CODE_BBD",
            Self::Bdt => "CURRENCY_CODE_BDT",
            Self::Bgn => "CURRENCY_CODE_BGN",
            Self::Bif => "CURRENCY_CODE_BIF",
            Self::Bmd => "CURRENCY_CODE_BMD",
            Self::Bnd => "CURRENCY_CODE_BND",
            Self::Bsd => "CURRENCY_CODE_BSD",
            Self::Bwp => "CURRENCY_CODE_BWP",
            Self::Byn => "CURRENCY_CODE_BYN",
            Self::Bzd => "CURRENCY_CODE_BZD",
            Self::Cad => "CURRENCY_CODE_CAD",
            Self::Cdf => "CURRENCY_CODE_CDF",
            Self::Chf => "CURRENCY_CODE_CHF",
            Self::Cny => "CURRENCY_CODE_CNY",
            Self::Czk => "CURRENCY_CODE_CZK",
            Self::Dkk => "CURRENCY_CODE_DKK",
            Self::Dop => "CURRENCY_CODE_DOP",
            Self::Dzd => "CURRENCY_CODE_DZD",
            Self::Egp => "CURRENCY_CODE_EGP",
            Self::Etb => "CURRENCY_CODE_ETB",
            Self::Eur => "CURRENCY_CODE_EUR",
            Self::Fjd => "CURRENCY_CODE_FJD",
            Self::Gbp => "CURRENCY_CODE_GBP",
            Self::Gel => "CURRENCY_CODE_GEL",
            Self::Gip => "CURRENCY_CODE_GIP",
            Self::Gmd => "CURRENCY_CODE_GMD",
            Self::Gyd => "CURRENCY_CODE_GYD",
            Self::Hkd => "CURRENCY_CODE_HKD",
            Self::Htg => "CURRENCY_CODE_HTG",
            Self::Huf => "CURRENCY_CODE_HUF",
            Self::Idr => "CURRENCY_CODE_IDR",
            Self::Ils => "CURRENCY_CODE_ILS",
            Self::Inr => "CURRENCY_CODE_INR",
            Self::Isk => "CURRENCY_CODE_ISK",
            Self::Jmd => "CURRENCY_CODE_JMD",
            Self::Jpy => "CURRENCY_CODE_JPY",
            Self::Kes => "CURRENCY_CODE_KES",
            Self::Kgs => "CURRENCY_CODE_KGS",
            Self::Khr => "CURRENCY_CODE_KHR",
            Self::Kmf => "CURRENCY_CODE_KMF",
            Self::Krw => "CURRENCY_CODE_KRW",
            Self::Kyd => "CURRENCY_CODE_KYD",
            Self::Kzt => "CURRENCY_CODE_KZT",
            Self::Lbp => "CURRENCY_CODE_LBP",
            Self::Lkr => "CURRENCY_CODE_LKR",
            Self::Lrd => "CURRENCY_CODE_LRD",
            Self::Lsl => "CURRENCY_CODE_LSL",
            Self::Mad => "CURRENCY_CODE_MAD",
            Self::Mdl => "CURRENCY_CODE_MDL",
            Self::Mga => "CURRENCY_CODE_MGA",
            Self::Mkd => "CURRENCY_CODE_MKD",
            Self::Mmk => "CURRENCY_CODE_MMK",
            Self::Mnt => "CURRENCY_CODE_MNT",
            Self::Mop => "CURRENCY_CODE_MOP",
            Self::Mvr => "CURRENCY_CODE_MVR",
            Self::Mwk => "CURRENCY_CODE_MWK",
            Self::Mxn => "CURRENCY_CODE_MXN",
            Self::Myr => "CURRENCY_CODE_MYR",
            Self::Mzn => "CURRENCY_CODE_MZN",
            Self::Nad => "CURRENCY_CODE_NAD",
            Self::Ngn => "CURRENCY_CODE_NGN",
            Self::Nok => "CURRENCY_CODE_NOK",
            Self::Npr => "CURRENCY_CODE_NPR",
            Self::Nzd => "CURRENCY_CODE_NZD",
            Self::Pgk => "CURRENCY_CODE_PGK",
            Self::Php => "CURRENCY_CODE_PHP",
            Self::Pkr => "CURRENCY_CODE_PKR",
            Self::Pln => "CURRENCY_CODE_PLN",
            Self::Qar => "CURRENCY_CODE_QAR",
            Self::Ron => "CURRENCY_CODE_RON",
            Self::Rsd => "CURRENCY_CODE_RSD",
            Self::Rub => "CURRENCY_CODE_RUB",
            Self::Rwf => "CURRENCY_CODE_RWF",
            Self::Sar => "CURRENCY_CODE_SAR",
            Self::Sbd => "CURRENCY_CODE_SBD",
            Self::Scr => "CURRENCY_CODE_SCR",
            Self::Sek => "CURRENCY_CODE_SEK",
            Self::Sgd => "CURRENCY_CODE_SGD",
            Self::Sle => "CURRENCY_CODE_SLE",
            Self::Sos => "CURRENCY_CODE_SOS",
            Self::Szl => "CURRENCY_CODE_SZL",
            Self::Thb => "CURRENCY_CODE_THB",
            Self::Tjs => "CURRENCY_CODE_TJS",
            Self::Top => "CURRENCY_CODE_TOP",
            Self::Try => "CURRENCY_CODE_TRY",
            Self::Ttd => "CURRENCY_CODE_TTD",
            Self::Twd => "CURRENCY_CODE_TWD",
            Self::Tzs => "CURRENCY_CODE_TZS",
            Self::Uah => "CURRENCY_CODE_UAH",
            Self::Ugx => "CURRENCY_CODE_UGX",
            Self::Usd => "CURRENCY_CODE_USD",
            Self::Uzs => "CURRENCY_CODE_UZS",
            Self::Vnd => "CURRENCY_CODE_VND",
            Self::Vuv => "CURRENCY_CODE_VUV",
            Self::Wst => "CURRENCY_CODE_WST",
            Self::Xaf => "CURRENCY_CODE_XAF",
            Self::Xcd => "CURRENCY_CODE_XCD",
            Self::Yer => "CURRENCY_CODE_YER",
            Self::Zar => "CURRENCY_CODE_ZAR",
            Self::Zmw => "CURRENCY_CODE_ZMW",
        };
        serializer.serialize_str(variant)
    }
}
impl<'de> serde::Deserialize<'de> for CurrencyCode {
    #[allow(deprecated)]
    fn deserialize<D>(deserializer: D) -> std::result::Result<Self, D::Error>
    where
        D: serde::Deserializer<'de>,
    {
        const FIELDS: &[&str] = &[
            "CURRENCY_CODE_UNSPECIFIED",
            "CURRENCY_CODE_AED",
            "CURRENCY_CODE_ALL",
            "CURRENCY_CODE_AMD",
            "CURRENCY_CODE_ANG",
            "CURRENCY_CODE_AUD",
            "CURRENCY_CODE_AWG",
            "CURRENCY_CODE_AZN",
            "CURRENCY_CODE_BAM",
            "CURRENCY_CODE_BBD",
            "CURRENCY_CODE_BDT",
            "CURRENCY_CODE_BGN",
            "CURRENCY_CODE_BIF",
            "CURRENCY_CODE_BMD",
            "CURRENCY_CODE_BND",
            "CURRENCY_CODE_BSD",
            "CURRENCY_CODE_BWP",
            "CURRENCY_CODE_BYN",
            "CURRENCY_CODE_BZD",
            "CURRENCY_CODE_CAD",
            "CURRENCY_CODE_CDF",
            "CURRENCY_CODE_CHF",
            "CURRENCY_CODE_CNY",
            "CURRENCY_CODE_CZK",
            "CURRENCY_CODE_DKK",
            "CURRENCY_CODE_DOP",
            "CURRENCY_CODE_DZD",
            "CURRENCY_CODE_EGP",
            "CURRENCY_CODE_ETB",
            "CURRENCY_CODE_EUR",
            "CURRENCY_CODE_FJD",
            "CURRENCY_CODE_GBP",
            "CURRENCY_CODE_GEL",
            "CURRENCY_CODE_GIP",
            "CURRENCY_CODE_GMD",
            "CURRENCY_CODE_GYD",
            "CURRENCY_CODE_HKD",
            "CURRENCY_CODE_HTG",
            "CURRENCY_CODE_HUF",
            "CURRENCY_CODE_IDR",
            "CURRENCY_CODE_ILS",
            "CURRENCY_CODE_INR",
            "CURRENCY_CODE_ISK",
            "CURRENCY_CODE_JMD",
            "CURRENCY_CODE_JPY",
            "CURRENCY_CODE_KES",
            "CURRENCY_CODE_KGS",
            "CURRENCY_CODE_KHR",
            "CURRENCY_CODE_KMF",
            "CURRENCY_CODE_KRW",
            "CURRENCY_CODE_KYD",
            "CURRENCY_CODE_KZT",
            "CURRENCY_CODE_LBP",
            "CURRENCY_CODE_LKR",
            "CURRENCY_CODE_LRD",
            "CURRENCY_CODE_LSL",
            "CURRENCY_CODE_MAD",
            "CURRENCY_CODE_MDL",
            "CURRENCY_CODE_MGA",
            "CURRENCY_CODE_MKD",
            "CURRENCY_CODE_MMK",
            "CURRENCY_CODE_MNT",
            "CURRENCY_CODE_MOP",
            "CURRENCY_CODE_MVR",
            "CURRENCY_CODE_MWK",
            "CURRENCY_CODE_MXN",
            "CURRENCY_CODE_MYR",
            "CURRENCY_CODE_MZN",
            "CURRENCY_CODE_NAD",
            "CURRENCY_CODE_NGN",
            "CURRENCY_CODE_NOK",
            "CURRENCY_CODE_NPR",
            "CURRENCY_CODE_NZD",
            "CURRENCY_CODE_PGK",
            "CURRENCY_CODE_PHP",
            "CURRENCY_CODE_PKR",
            "CURRENCY_CODE_PLN",
            "CURRENCY_CODE_QAR",
            "CURRENCY_CODE_RON",
            "CURRENCY_CODE_RSD",
            "CURRENCY_CODE_RUB",
            "CURRENCY_CODE_RWF",
            "CURRENCY_CODE_SAR",
            "CURRENCY_CODE_SBD",
            "CURRENCY_CODE_SCR",
            "CURRENCY_CODE_SEK",
            "CURRENCY_CODE_SGD",
            "CURRENCY_CODE_SLE",
            "CURRENCY_CODE_SOS",
            "CURRENCY_CODE_SZL",
            "CURRENCY_CODE_THB",
            "CURRENCY_CODE_TJS",
            "CURRENCY_CODE_TOP",
            "CURRENCY_CODE_TRY",
            "CURRENCY_CODE_TTD",
            "CURRENCY_CODE_TWD",
            "CURRENCY_CODE_TZS",
            "CURRENCY_CODE_UAH",
            "CURRENCY_CODE_UGX",
            "CURRENCY_CODE_USD",
            "CURRENCY_CODE_UZS",
            "CURRENCY_CODE_VND",
            "CURRENCY_CODE_VUV",
            "CURRENCY_CODE_WST",
            "CURRENCY_CODE_XAF",
            "CURRENCY_CODE_XCD",
            "CURRENCY_CODE_YER",
            "CURRENCY_CODE_ZAR",
            "CURRENCY_CODE_ZMW",
        ];

        struct GeneratedVisitor;

        impl<'de> serde::de::Visitor<'de> for GeneratedVisitor {
            type Value = CurrencyCode;

            fn expecting(&self, formatter: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
                write!(formatter, "expected one of: {:?}", &FIELDS)
            }

            fn visit_i64<E>(self, v: i64) -> std::result::Result<Self::Value, E>
            where
                E: serde::de::Error,
            {
                i32::try_from(v)
                    .ok()
                    .and_then(|x| x.try_into().ok())
                    .ok_or_else(|| {
                        serde::de::Error::invalid_value(serde::de::Unexpected::Signed(v), &self)
                    })
            }

            fn visit_u64<E>(self, v: u64) -> std::result::Result<Self::Value, E>
            where
                E: serde::de::Error,
            {
                i32::try_from(v)
                    .ok()
                    .and_then(|x| x.try_into().ok())
                    .ok_or_else(|| {
                        serde::de::Error::invalid_value(serde::de::Unexpected::Unsigned(v), &self)
                    })
            }

            fn visit_str<E>(self, value: &str) -> std::result::Result<Self::Value, E>
            where
                E: serde::de::Error,
            {
                match value {
                    "CURRENCY_CODE_UNSPECIFIED" => Ok(CurrencyCode::Unspecified),
                    "CURRENCY_CODE_AED" => Ok(CurrencyCode::Aed),
                    "CURRENCY_CODE_ALL" => Ok(CurrencyCode::All),
                    "CURRENCY_CODE_AMD" => Ok(CurrencyCode::Amd),
                    "CURRENCY_CODE_ANG" => Ok(CurrencyCode::Ang),
                    "CURRENCY_CODE_AUD" => Ok(CurrencyCode::Aud),
                    "CURRENCY_CODE_AWG" => Ok(CurrencyCode::Awg),
                    "CURRENCY_CODE_AZN" => Ok(CurrencyCode::Azn),
                    "CURRENCY_CODE_BAM" => Ok(CurrencyCode::Bam),
                    "CURRENCY_CODE_BBD" => Ok(CurrencyCode::Bbd),
                    "CURRENCY_CODE_BDT" => Ok(CurrencyCode::Bdt),
                    "CURRENCY_CODE_BGN" => Ok(CurrencyCode::Bgn),
                    "CURRENCY_CODE_BIF" => Ok(CurrencyCode::Bif),
                    "CURRENCY_CODE_BMD" => Ok(CurrencyCode::Bmd),
                    "CURRENCY_CODE_BND" => Ok(CurrencyCode::Bnd),
                    "CURRENCY_CODE_BSD" => Ok(CurrencyCode::Bsd),
                    "CURRENCY_CODE_BWP" => Ok(CurrencyCode::Bwp),
                    "CURRENCY_CODE_BYN" => Ok(CurrencyCode::Byn),
                    "CURRENCY_CODE_BZD" => Ok(CurrencyCode::Bzd),
                    "CURRENCY_CODE_CAD" => Ok(CurrencyCode::Cad),
                    "CURRENCY_CODE_CDF" => Ok(CurrencyCode::Cdf),
                    "CURRENCY_CODE_CHF" => Ok(CurrencyCode::Chf),
                    "CURRENCY_CODE_CNY" => Ok(CurrencyCode::Cny),
                    "CURRENCY_CODE_CZK" => Ok(CurrencyCode::Czk),
                    "CURRENCY_CODE_DKK" => Ok(CurrencyCode::Dkk),
                    "CURRENCY_CODE_DOP" => Ok(CurrencyCode::Dop),
                    "CURRENCY_CODE_DZD" => Ok(CurrencyCode::Dzd),
                    "CURRENCY_CODE_EGP" => Ok(CurrencyCode::Egp),
                    "CURRENCY_CODE_ETB" => Ok(CurrencyCode::Etb),
                    "CURRENCY_CODE_EUR" => Ok(CurrencyCode::Eur),
                    "CURRENCY_CODE_FJD" => Ok(CurrencyCode::Fjd),
                    "CURRENCY_CODE_GBP" => Ok(CurrencyCode::Gbp),
                    "CURRENCY_CODE_GEL" => Ok(CurrencyCode::Gel),
                    "CURRENCY_CODE_GIP" => Ok(CurrencyCode::Gip),
                    "CURRENCY_CODE_GMD" => Ok(CurrencyCode::Gmd),
                    "CURRENCY_CODE_GYD" => Ok(CurrencyCode::Gyd),
                    "CURRENCY_CODE_HKD" => Ok(CurrencyCode::Hkd),
                    "CURRENCY_CODE_HTG" => Ok(CurrencyCode::Htg),
                    "CURRENCY_CODE_HUF" => Ok(CurrencyCode::Huf),
                    "CURRENCY_CODE_IDR" => Ok(CurrencyCode::Idr),
                    "CURRENCY_CODE_ILS" => Ok(CurrencyCode::Ils),
                    "CURRENCY_CODE_INR" => Ok(CurrencyCode::Inr),
                    "CURRENCY_CODE_ISK" => Ok(CurrencyCode::Isk),
                    "CURRENCY_CODE_JMD" => Ok(CurrencyCode::Jmd),
                    "CURRENCY_CODE_JPY" => Ok(CurrencyCode::Jpy),
                    "CURRENCY_CODE_KES" => Ok(CurrencyCode::Kes),
                    "CURRENCY_CODE_KGS" => Ok(CurrencyCode::Kgs),
                    "CURRENCY_CODE_KHR" => Ok(CurrencyCode::Khr),
                    "CURRENCY_CODE_KMF" => Ok(CurrencyCode::Kmf),
                    "CURRENCY_CODE_KRW" => Ok(CurrencyCode::Krw),
                    "CURRENCY_CODE_KYD" => Ok(CurrencyCode::Kyd),
                    "CURRENCY_CODE_KZT" => Ok(CurrencyCode::Kzt),
                    "CURRENCY_CODE_LBP" => Ok(CurrencyCode::Lbp),
                    "CURRENCY_CODE_LKR" => Ok(CurrencyCode::Lkr),
                    "CURRENCY_CODE_LRD" => Ok(CurrencyCode::Lrd),
                    "CURRENCY_CODE_LSL" => Ok(CurrencyCode::Lsl),
                    "CURRENCY_CODE_MAD" => Ok(CurrencyCode::Mad),
                    "CURRENCY_CODE_MDL" => Ok(CurrencyCode::Mdl),
                    "CURRENCY_CODE_MGA" => Ok(CurrencyCode::Mga),
                    "CURRENCY_CODE_MKD" => Ok(CurrencyCode::Mkd),
                    "CURRENCY_CODE_MMK" => Ok(CurrencyCode::Mmk),
                    "CURRENCY_CODE_MNT" => Ok(CurrencyCode::Mnt),
                    "CURRENCY_CODE_MOP" => Ok(CurrencyCode::Mop),
                    "CURRENCY_CODE_MVR" => Ok(CurrencyCode::Mvr),
                    "CURRENCY_CODE_MWK" => Ok(CurrencyCode::Mwk),
                    "CURRENCY_CODE_MXN" => Ok(CurrencyCode::Mxn),
                    "CURRENCY_CODE_MYR" => Ok(CurrencyCode::Myr),
                    "CURRENCY_CODE_MZN" => Ok(CurrencyCode::Mzn),
                    "CURRENCY_CODE_NAD" => Ok(CurrencyCode::Nad),
                    "CURRENCY_CODE_NGN" => Ok(CurrencyCode::Ngn),
                    "CURRENCY_CODE_NOK" => Ok(CurrencyCode::Nok),
                    "CURRENCY_CODE_NPR" => Ok(CurrencyCode::Npr),
                    "CURRENCY_CODE_NZD" => Ok(CurrencyCode::Nzd),
                    "CURRENCY_CODE_PGK" => Ok(CurrencyCode::Pgk),
                    "CURRENCY_CODE_PHP" => Ok(CurrencyCode::Php),
                    "CURRENCY_CODE_PKR" => Ok(CurrencyCode::Pkr),
                    "CURRENCY_CODE_PLN" => Ok(CurrencyCode::Pln),
                    "CURRENCY_CODE_QAR" => Ok(CurrencyCode::Qar),
                    "CURRENCY_CODE_RON" => Ok(CurrencyCode::Ron),
                    "CURRENCY_CODE_RSD" => Ok(CurrencyCode::Rsd),
                    "CURRENCY_CODE_RUB" => Ok(CurrencyCode::Rub),
                    "CURRENCY_CODE_RWF" => Ok(CurrencyCode::Rwf),
                    "CURRENCY_CODE_SAR" => Ok(CurrencyCode::Sar),
                    "CURRENCY_CODE_SBD" => Ok(CurrencyCode::Sbd),
                    "CURRENCY_CODE_SCR" => Ok(CurrencyCode::Scr),
                    "CURRENCY_CODE_SEK" => Ok(CurrencyCode::Sek),
                    "CURRENCY_CODE_SGD" => Ok(CurrencyCode::Sgd),
                    "CURRENCY_CODE_SLE" => Ok(CurrencyCode::Sle),
                    "CURRENCY_CODE_SOS" => Ok(CurrencyCode::Sos),
                    "CURRENCY_CODE_SZL" => Ok(CurrencyCode::Szl),
                    "CURRENCY_CODE_THB" => Ok(CurrencyCode::Thb),
                    "CURRENCY_CODE_TJS" => Ok(CurrencyCode::Tjs),
                    "CURRENCY_CODE_TOP" => Ok(CurrencyCode::Top),
                    "CURRENCY_CODE_TRY" => Ok(CurrencyCode::Try),
                    "CURRENCY_CODE_TTD" => Ok(CurrencyCode::Ttd),
                    "CURRENCY_CODE_TWD" => Ok(CurrencyCode::Twd),
                    "CURRENCY_CODE_TZS" => Ok(CurrencyCode::Tzs),
                    "CURRENCY_CODE_UAH" => Ok(CurrencyCode::Uah),
                    "CURRENCY_CODE_UGX" => Ok(CurrencyCode::Ugx),
                    "CURRENCY_CODE_USD" => Ok(CurrencyCode::Usd),
                    "CURRENCY_CODE_UZS" => Ok(CurrencyCode::Uzs),
                    "CURRENCY_CODE_VND" => Ok(CurrencyCode::Vnd),
                    "CURRENCY_CODE_VUV" => Ok(CurrencyCode::Vuv),
                    "CURRENCY_CODE_WST" => Ok(CurrencyCode::Wst),
                    "CURRENCY_CODE_XAF" => Ok(CurrencyCode::Xaf),
                    "CURRENCY_CODE_XCD" => Ok(CurrencyCode::Xcd),
                    "CURRENCY_CODE_YER" => Ok(CurrencyCode::Yer),
                    "CURRENCY_CODE_ZAR" => Ok(CurrencyCode::Zar),
                    "CURRENCY_CODE_ZMW" => Ok(CurrencyCode::Zmw),
                    _ => Err(serde::de::Error::unknown_variant(value, FIELDS)),
                }
            }
        }
        deserializer.deserialize_any(GeneratedVisitor)
    }
}
