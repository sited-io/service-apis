// @generated
impl serde::Serialize for CountryCode {
    #[allow(deprecated)]
    fn serialize<S>(&self, serializer: S) -> std::result::Result<S::Ok, S::Error>
    where
        S: serde::Serializer,
    {
        let variant = match self {
            Self::Unspecified => "COUNTRY_CODE_UNSPECIFIED",
            Self::Ac => "COUNTRY_CODE_AC",
            Self::Ad => "COUNTRY_CODE_AD",
            Self::Ae => "COUNTRY_CODE_AE",
            Self::Af => "COUNTRY_CODE_AF",
            Self::Ag => "COUNTRY_CODE_AG",
            Self::Ai => "COUNTRY_CODE_AI",
            Self::Al => "COUNTRY_CODE_AL",
            Self::Am => "COUNTRY_CODE_AM",
            Self::Ao => "COUNTRY_CODE_AO",
            Self::Aq => "COUNTRY_CODE_AQ",
            Self::Ar => "COUNTRY_CODE_AR",
            Self::At => "COUNTRY_CODE_AT",
            Self::Au => "COUNTRY_CODE_AU",
            Self::Aw => "COUNTRY_CODE_AW",
            Self::Ax => "COUNTRY_CODE_AX",
            Self::Az => "COUNTRY_CODE_AZ",
            Self::Ba => "COUNTRY_CODE_BA",
            Self::Bb => "COUNTRY_CODE_BB",
            Self::Bd => "COUNTRY_CODE_BD",
            Self::Be => "COUNTRY_CODE_BE",
            Self::Bf => "COUNTRY_CODE_BF",
            Self::Bg => "COUNTRY_CODE_BG",
            Self::Bh => "COUNTRY_CODE_BH",
            Self::Bi => "COUNTRY_CODE_BI",
            Self::Bj => "COUNTRY_CODE_BJ",
            Self::Bl => "COUNTRY_CODE_BL",
            Self::Bm => "COUNTRY_CODE_BM",
            Self::Bn => "COUNTRY_CODE_BN",
            Self::Bo => "COUNTRY_CODE_BO",
            Self::Bq => "COUNTRY_CODE_BQ",
            Self::Br => "COUNTRY_CODE_BR",
            Self::Bs => "COUNTRY_CODE_BS",
            Self::Bt => "COUNTRY_CODE_BT",
            Self::Bv => "COUNTRY_CODE_BV",
            Self::Bw => "COUNTRY_CODE_BW",
            Self::By => "COUNTRY_CODE_BY",
            Self::Bz => "COUNTRY_CODE_BZ",
            Self::Ca => "COUNTRY_CODE_CA",
            Self::Cd => "COUNTRY_CODE_CD",
            Self::Cf => "COUNTRY_CODE_CF",
            Self::Cg => "COUNTRY_CODE_CG",
            Self::Ch => "COUNTRY_CODE_CH",
            Self::Ci => "COUNTRY_CODE_CI",
            Self::Ck => "COUNTRY_CODE_CK",
            Self::Cl => "COUNTRY_CODE_CL",
            Self::Cm => "COUNTRY_CODE_CM",
            Self::Cn => "COUNTRY_CODE_CN",
            Self::Co => "COUNTRY_CODE_CO",
            Self::Cr => "COUNTRY_CODE_CR",
            Self::Cv => "COUNTRY_CODE_CV",
            Self::Cw => "COUNTRY_CODE_CW",
            Self::Cy => "COUNTRY_CODE_CY",
            Self::Cz => "COUNTRY_CODE_CZ",
            Self::De => "COUNTRY_CODE_DE",
            Self::Dj => "COUNTRY_CODE_DJ",
            Self::Dk => "COUNTRY_CODE_DK",
            Self::Dm => "COUNTRY_CODE_DM",
            Self::Do => "COUNTRY_CODE_DO",
            Self::Dz => "COUNTRY_CODE_DZ",
            Self::Ec => "COUNTRY_CODE_EC",
            Self::Ee => "COUNTRY_CODE_EE",
            Self::Eg => "COUNTRY_CODE_EG",
            Self::Eh => "COUNTRY_CODE_EH",
            Self::Er => "COUNTRY_CODE_ER",
            Self::Es => "COUNTRY_CODE_ES",
            Self::Et => "COUNTRY_CODE_ET",
            Self::Fi => "COUNTRY_CODE_FI",
            Self::Fj => "COUNTRY_CODE_FJ",
            Self::Fk => "COUNTRY_CODE_FK",
            Self::Fo => "COUNTRY_CODE_FO",
            Self::Fr => "COUNTRY_CODE_FR",
            Self::Ga => "COUNTRY_CODE_GA",
            Self::Gb => "COUNTRY_CODE_GB",
            Self::Gd => "COUNTRY_CODE_GD",
            Self::Ge => "COUNTRY_CODE_GE",
            Self::Gf => "COUNTRY_CODE_GF",
            Self::Gg => "COUNTRY_CODE_GG",
            Self::Gh => "COUNTRY_CODE_GH",
            Self::Gi => "COUNTRY_CODE_GI",
            Self::Gl => "COUNTRY_CODE_GL",
            Self::Gm => "COUNTRY_CODE_GM",
            Self::Gn => "COUNTRY_CODE_GN",
            Self::Gp => "COUNTRY_CODE_GP",
            Self::Gq => "COUNTRY_CODE_GQ",
            Self::Gr => "COUNTRY_CODE_GR",
            Self::Gs => "COUNTRY_CODE_GS",
            Self::Gt => "COUNTRY_CODE_GT",
            Self::Gu => "COUNTRY_CODE_GU",
            Self::Gw => "COUNTRY_CODE_GW",
            Self::Gy => "COUNTRY_CODE_GY",
            Self::Hk => "COUNTRY_CODE_HK",
            Self::Hn => "COUNTRY_CODE_HN",
            Self::Hr => "COUNTRY_CODE_HR",
            Self::Ht => "COUNTRY_CODE_HT",
            Self::Hu => "COUNTRY_CODE_HU",
            Self::Id => "COUNTRY_CODE_ID",
            Self::Ie => "COUNTRY_CODE_IE",
            Self::Il => "COUNTRY_CODE_IL",
            Self::Im => "COUNTRY_CODE_IM",
            Self::In => "COUNTRY_CODE_IN",
            Self::Io => "COUNTRY_CODE_IO",
            Self::Iq => "COUNTRY_CODE_IQ",
            Self::Is => "COUNTRY_CODE_IS",
            Self::It => "COUNTRY_CODE_IT",
            Self::Je => "COUNTRY_CODE_JE",
            Self::Jm => "COUNTRY_CODE_JM",
            Self::Jo => "COUNTRY_CODE_JO",
            Self::Jp => "COUNTRY_CODE_JP",
            Self::Ke => "COUNTRY_CODE_KE",
            Self::Kg => "COUNTRY_CODE_KG",
            Self::Kh => "COUNTRY_CODE_KH",
            Self::Ki => "COUNTRY_CODE_KI",
            Self::Km => "COUNTRY_CODE_KM",
            Self::Kn => "COUNTRY_CODE_KN",
            Self::Kr => "COUNTRY_CODE_KR",
            Self::Kw => "COUNTRY_CODE_KW",
            Self::Ky => "COUNTRY_CODE_KY",
            Self::La => "COUNTRY_CODE_LA",
            Self::Lb => "COUNTRY_CODE_LB",
            Self::Lc => "COUNTRY_CODE_LC",
            Self::Li => "COUNTRY_CODE_LI",
            Self::Lk => "COUNTRY_CODE_LK",
            Self::Lr => "COUNTRY_CODE_LR",
            Self::Ls => "COUNTRY_CODE_LS",
            Self::Lt => "COUNTRY_CODE_LT",
            Self::Lu => "COUNTRY_CODE_LU",
            Self::Lv => "COUNTRY_CODE_LV",
            Self::Ly => "COUNTRY_CODE_LY",
            Self::Ma => "COUNTRY_CODE_MA",
            Self::Mc => "COUNTRY_CODE_MC",
            Self::Md => "COUNTRY_CODE_MD",
            Self::Me => "COUNTRY_CODE_ME",
            Self::Mf => "COUNTRY_CODE_MF",
            Self::Mg => "COUNTRY_CODE_MG",
            Self::Mk => "COUNTRY_CODE_MK",
            Self::Ml => "COUNTRY_CODE_ML",
            Self::Mm => "COUNTRY_CODE_MM",
            Self::Mn => "COUNTRY_CODE_MN",
            Self::Mo => "COUNTRY_CODE_MO",
            Self::Mq => "COUNTRY_CODE_MQ",
            Self::Mr => "COUNTRY_CODE_MR",
            Self::Ms => "COUNTRY_CODE_MS",
            Self::Mt => "COUNTRY_CODE_MT",
            Self::Mu => "COUNTRY_CODE_MU",
            Self::Mv => "COUNTRY_CODE_MV",
            Self::Mw => "COUNTRY_CODE_MW",
            Self::Mx => "COUNTRY_CODE_MX",
            Self::My => "COUNTRY_CODE_MY",
            Self::Mz => "COUNTRY_CODE_MZ",
            Self::Na => "COUNTRY_CODE_NA",
            Self::Nc => "COUNTRY_CODE_NC",
            Self::Ne => "COUNTRY_CODE_NE",
            Self::Ng => "COUNTRY_CODE_NG",
            Self::Ni => "COUNTRY_CODE_NI",
            Self::Nl => "COUNTRY_CODE_NL",
            Self::No => "COUNTRY_CODE_NO",
            Self::Np => "COUNTRY_CODE_NP",
            Self::Nr => "COUNTRY_CODE_NR",
            Self::Nu => "COUNTRY_CODE_NU",
            Self::Nz => "COUNTRY_CODE_NZ",
            Self::Om => "COUNTRY_CODE_OM",
            Self::Pa => "COUNTRY_CODE_PA",
            Self::Pe => "COUNTRY_CODE_PE",
            Self::Pf => "COUNTRY_CODE_PF",
            Self::Pg => "COUNTRY_CODE_PG",
            Self::Ph => "COUNTRY_CODE_PH",
            Self::Pk => "COUNTRY_CODE_PK",
            Self::Pl => "COUNTRY_CODE_PL",
            Self::Pm => "COUNTRY_CODE_PM",
            Self::Pn => "COUNTRY_CODE_PN",
            Self::Pr => "COUNTRY_CODE_PR",
            Self::Ps => "COUNTRY_CODE_PS",
            Self::Pt => "COUNTRY_CODE_PT",
            Self::Py => "COUNTRY_CODE_PY",
            Self::Qa => "COUNTRY_CODE_QA",
            Self::Re => "COUNTRY_CODE_RE",
            Self::Ro => "COUNTRY_CODE_RO",
            Self::Rs => "COUNTRY_CODE_RS",
            Self::Ru => "COUNTRY_CODE_RU",
            Self::Rw => "COUNTRY_CODE_RW",
            Self::Sa => "COUNTRY_CODE_SA",
            Self::Sb => "COUNTRY_CODE_SB",
            Self::Sc => "COUNTRY_CODE_SC",
            Self::Se => "COUNTRY_CODE_SE",
            Self::Sg => "COUNTRY_CODE_SG",
            Self::Sh => "COUNTRY_CODE_SH",
            Self::Si => "COUNTRY_CODE_SI",
            Self::Sj => "COUNTRY_CODE_SJ",
            Self::Sk => "COUNTRY_CODE_SK",
            Self::Sl => "COUNTRY_CODE_SL",
            Self::Sm => "COUNTRY_CODE_SM",
            Self::Sn => "COUNTRY_CODE_SN",
            Self::So => "COUNTRY_CODE_SO",
            Self::Sr => "COUNTRY_CODE_SR",
            Self::Ss => "COUNTRY_CODE_SS",
            Self::St => "COUNTRY_CODE_ST",
            Self::Sv => "COUNTRY_CODE_SV",
            Self::Sx => "COUNTRY_CODE_SX",
            Self::Sz => "COUNTRY_CODE_SZ",
            Self::Ta => "COUNTRY_CODE_TA",
            Self::Tc => "COUNTRY_CODE_TC",
            Self::Td => "COUNTRY_CODE_TD",
            Self::Tf => "COUNTRY_CODE_TF",
            Self::Tg => "COUNTRY_CODE_TG",
            Self::Th => "COUNTRY_CODE_TH",
            Self::Tj => "COUNTRY_CODE_TJ",
            Self::Tk => "COUNTRY_CODE_TK",
            Self::Tl => "COUNTRY_CODE_TL",
            Self::Tm => "COUNTRY_CODE_TM",
            Self::Tn => "COUNTRY_CODE_TN",
            Self::To => "COUNTRY_CODE_TO",
            Self::Tr => "COUNTRY_CODE_TR",
            Self::Tt => "COUNTRY_CODE_TT",
            Self::Tv => "COUNTRY_CODE_TV",
            Self::Tw => "COUNTRY_CODE_TW",
            Self::Tz => "COUNTRY_CODE_TZ",
            Self::Ua => "COUNTRY_CODE_UA",
            Self::Ug => "COUNTRY_CODE_UG",
            Self::Us => "COUNTRY_CODE_US",
            Self::Uy => "COUNTRY_CODE_UY",
            Self::Uz => "COUNTRY_CODE_UZ",
            Self::Va => "COUNTRY_CODE_VA",
            Self::Vc => "COUNTRY_CODE_VC",
            Self::Ve => "COUNTRY_CODE_VE",
            Self::Vg => "COUNTRY_CODE_VG",
            Self::Vn => "COUNTRY_CODE_VN",
            Self::Vu => "COUNTRY_CODE_VU",
            Self::Wf => "COUNTRY_CODE_WF",
            Self::Ws => "COUNTRY_CODE_WS",
            Self::Xk => "COUNTRY_CODE_XK",
            Self::Ye => "COUNTRY_CODE_YE",
            Self::Yt => "COUNTRY_CODE_YT",
            Self::Za => "COUNTRY_CODE_ZA",
            Self::Zm => "COUNTRY_CODE_ZM",
            Self::Zw => "COUNTRY_CODE_ZW",
            Self::Zz => "COUNTRY_CODE_ZZ",
        };
        serializer.serialize_str(variant)
    }
}
impl<'de> serde::Deserialize<'de> for CountryCode {
    #[allow(deprecated)]
    fn deserialize<D>(deserializer: D) -> std::result::Result<Self, D::Error>
    where
        D: serde::Deserializer<'de>,
    {
        const FIELDS: &[&str] = &[
            "COUNTRY_CODE_UNSPECIFIED",
            "COUNTRY_CODE_AC",
            "COUNTRY_CODE_AD",
            "COUNTRY_CODE_AE",
            "COUNTRY_CODE_AF",
            "COUNTRY_CODE_AG",
            "COUNTRY_CODE_AI",
            "COUNTRY_CODE_AL",
            "COUNTRY_CODE_AM",
            "COUNTRY_CODE_AO",
            "COUNTRY_CODE_AQ",
            "COUNTRY_CODE_AR",
            "COUNTRY_CODE_AT",
            "COUNTRY_CODE_AU",
            "COUNTRY_CODE_AW",
            "COUNTRY_CODE_AX",
            "COUNTRY_CODE_AZ",
            "COUNTRY_CODE_BA",
            "COUNTRY_CODE_BB",
            "COUNTRY_CODE_BD",
            "COUNTRY_CODE_BE",
            "COUNTRY_CODE_BF",
            "COUNTRY_CODE_BG",
            "COUNTRY_CODE_BH",
            "COUNTRY_CODE_BI",
            "COUNTRY_CODE_BJ",
            "COUNTRY_CODE_BL",
            "COUNTRY_CODE_BM",
            "COUNTRY_CODE_BN",
            "COUNTRY_CODE_BO",
            "COUNTRY_CODE_BQ",
            "COUNTRY_CODE_BR",
            "COUNTRY_CODE_BS",
            "COUNTRY_CODE_BT",
            "COUNTRY_CODE_BV",
            "COUNTRY_CODE_BW",
            "COUNTRY_CODE_BY",
            "COUNTRY_CODE_BZ",
            "COUNTRY_CODE_CA",
            "COUNTRY_CODE_CD",
            "COUNTRY_CODE_CF",
            "COUNTRY_CODE_CG",
            "COUNTRY_CODE_CH",
            "COUNTRY_CODE_CI",
            "COUNTRY_CODE_CK",
            "COUNTRY_CODE_CL",
            "COUNTRY_CODE_CM",
            "COUNTRY_CODE_CN",
            "COUNTRY_CODE_CO",
            "COUNTRY_CODE_CR",
            "COUNTRY_CODE_CV",
            "COUNTRY_CODE_CW",
            "COUNTRY_CODE_CY",
            "COUNTRY_CODE_CZ",
            "COUNTRY_CODE_DE",
            "COUNTRY_CODE_DJ",
            "COUNTRY_CODE_DK",
            "COUNTRY_CODE_DM",
            "COUNTRY_CODE_DO",
            "COUNTRY_CODE_DZ",
            "COUNTRY_CODE_EC",
            "COUNTRY_CODE_EE",
            "COUNTRY_CODE_EG",
            "COUNTRY_CODE_EH",
            "COUNTRY_CODE_ER",
            "COUNTRY_CODE_ES",
            "COUNTRY_CODE_ET",
            "COUNTRY_CODE_FI",
            "COUNTRY_CODE_FJ",
            "COUNTRY_CODE_FK",
            "COUNTRY_CODE_FO",
            "COUNTRY_CODE_FR",
            "COUNTRY_CODE_GA",
            "COUNTRY_CODE_GB",
            "COUNTRY_CODE_GD",
            "COUNTRY_CODE_GE",
            "COUNTRY_CODE_GF",
            "COUNTRY_CODE_GG",
            "COUNTRY_CODE_GH",
            "COUNTRY_CODE_GI",
            "COUNTRY_CODE_GL",
            "COUNTRY_CODE_GM",
            "COUNTRY_CODE_GN",
            "COUNTRY_CODE_GP",
            "COUNTRY_CODE_GQ",
            "COUNTRY_CODE_GR",
            "COUNTRY_CODE_GS",
            "COUNTRY_CODE_GT",
            "COUNTRY_CODE_GU",
            "COUNTRY_CODE_GW",
            "COUNTRY_CODE_GY",
            "COUNTRY_CODE_HK",
            "COUNTRY_CODE_HN",
            "COUNTRY_CODE_HR",
            "COUNTRY_CODE_HT",
            "COUNTRY_CODE_HU",
            "COUNTRY_CODE_ID",
            "COUNTRY_CODE_IE",
            "COUNTRY_CODE_IL",
            "COUNTRY_CODE_IM",
            "COUNTRY_CODE_IN",
            "COUNTRY_CODE_IO",
            "COUNTRY_CODE_IQ",
            "COUNTRY_CODE_IS",
            "COUNTRY_CODE_IT",
            "COUNTRY_CODE_JE",
            "COUNTRY_CODE_JM",
            "COUNTRY_CODE_JO",
            "COUNTRY_CODE_JP",
            "COUNTRY_CODE_KE",
            "COUNTRY_CODE_KG",
            "COUNTRY_CODE_KH",
            "COUNTRY_CODE_KI",
            "COUNTRY_CODE_KM",
            "COUNTRY_CODE_KN",
            "COUNTRY_CODE_KR",
            "COUNTRY_CODE_KW",
            "COUNTRY_CODE_KY",
            "COUNTRY_CODE_LA",
            "COUNTRY_CODE_LB",
            "COUNTRY_CODE_LC",
            "COUNTRY_CODE_LI",
            "COUNTRY_CODE_LK",
            "COUNTRY_CODE_LR",
            "COUNTRY_CODE_LS",
            "COUNTRY_CODE_LT",
            "COUNTRY_CODE_LU",
            "COUNTRY_CODE_LV",
            "COUNTRY_CODE_LY",
            "COUNTRY_CODE_MA",
            "COUNTRY_CODE_MC",
            "COUNTRY_CODE_MD",
            "COUNTRY_CODE_ME",
            "COUNTRY_CODE_MF",
            "COUNTRY_CODE_MG",
            "COUNTRY_CODE_MK",
            "COUNTRY_CODE_ML",
            "COUNTRY_CODE_MM",
            "COUNTRY_CODE_MN",
            "COUNTRY_CODE_MO",
            "COUNTRY_CODE_MQ",
            "COUNTRY_CODE_MR",
            "COUNTRY_CODE_MS",
            "COUNTRY_CODE_MT",
            "COUNTRY_CODE_MU",
            "COUNTRY_CODE_MV",
            "COUNTRY_CODE_MW",
            "COUNTRY_CODE_MX",
            "COUNTRY_CODE_MY",
            "COUNTRY_CODE_MZ",
            "COUNTRY_CODE_NA",
            "COUNTRY_CODE_NC",
            "COUNTRY_CODE_NE",
            "COUNTRY_CODE_NG",
            "COUNTRY_CODE_NI",
            "COUNTRY_CODE_NL",
            "COUNTRY_CODE_NO",
            "COUNTRY_CODE_NP",
            "COUNTRY_CODE_NR",
            "COUNTRY_CODE_NU",
            "COUNTRY_CODE_NZ",
            "COUNTRY_CODE_OM",
            "COUNTRY_CODE_PA",
            "COUNTRY_CODE_PE",
            "COUNTRY_CODE_PF",
            "COUNTRY_CODE_PG",
            "COUNTRY_CODE_PH",
            "COUNTRY_CODE_PK",
            "COUNTRY_CODE_PL",
            "COUNTRY_CODE_PM",
            "COUNTRY_CODE_PN",
            "COUNTRY_CODE_PR",
            "COUNTRY_CODE_PS",
            "COUNTRY_CODE_PT",
            "COUNTRY_CODE_PY",
            "COUNTRY_CODE_QA",
            "COUNTRY_CODE_RE",
            "COUNTRY_CODE_RO",
            "COUNTRY_CODE_RS",
            "COUNTRY_CODE_RU",
            "COUNTRY_CODE_RW",
            "COUNTRY_CODE_SA",
            "COUNTRY_CODE_SB",
            "COUNTRY_CODE_SC",
            "COUNTRY_CODE_SE",
            "COUNTRY_CODE_SG",
            "COUNTRY_CODE_SH",
            "COUNTRY_CODE_SI",
            "COUNTRY_CODE_SJ",
            "COUNTRY_CODE_SK",
            "COUNTRY_CODE_SL",
            "COUNTRY_CODE_SM",
            "COUNTRY_CODE_SN",
            "COUNTRY_CODE_SO",
            "COUNTRY_CODE_SR",
            "COUNTRY_CODE_SS",
            "COUNTRY_CODE_ST",
            "COUNTRY_CODE_SV",
            "COUNTRY_CODE_SX",
            "COUNTRY_CODE_SZ",
            "COUNTRY_CODE_TA",
            "COUNTRY_CODE_TC",
            "COUNTRY_CODE_TD",
            "COUNTRY_CODE_TF",
            "COUNTRY_CODE_TG",
            "COUNTRY_CODE_TH",
            "COUNTRY_CODE_TJ",
            "COUNTRY_CODE_TK",
            "COUNTRY_CODE_TL",
            "COUNTRY_CODE_TM",
            "COUNTRY_CODE_TN",
            "COUNTRY_CODE_TO",
            "COUNTRY_CODE_TR",
            "COUNTRY_CODE_TT",
            "COUNTRY_CODE_TV",
            "COUNTRY_CODE_TW",
            "COUNTRY_CODE_TZ",
            "COUNTRY_CODE_UA",
            "COUNTRY_CODE_UG",
            "COUNTRY_CODE_US",
            "COUNTRY_CODE_UY",
            "COUNTRY_CODE_UZ",
            "COUNTRY_CODE_VA",
            "COUNTRY_CODE_VC",
            "COUNTRY_CODE_VE",
            "COUNTRY_CODE_VG",
            "COUNTRY_CODE_VN",
            "COUNTRY_CODE_VU",
            "COUNTRY_CODE_WF",
            "COUNTRY_CODE_WS",
            "COUNTRY_CODE_XK",
            "COUNTRY_CODE_YE",
            "COUNTRY_CODE_YT",
            "COUNTRY_CODE_ZA",
            "COUNTRY_CODE_ZM",
            "COUNTRY_CODE_ZW",
            "COUNTRY_CODE_ZZ",
        ];

        struct GeneratedVisitor;

        impl<'de> serde::de::Visitor<'de> for GeneratedVisitor {
            type Value = CountryCode;

            fn expecting(&self, formatter: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
                write!(formatter, "expected one of: {:?}", &FIELDS)
            }

            fn visit_i64<E>(self, v: i64) -> std::result::Result<Self::Value, E>
            where
                E: serde::de::Error,
            {
                i32::try_from(v)
                    .ok()
                    .and_then(|x| x.try_into().ok())
                    .ok_or_else(|| {
                        serde::de::Error::invalid_value(serde::de::Unexpected::Signed(v), &self)
                    })
            }

            fn visit_u64<E>(self, v: u64) -> std::result::Result<Self::Value, E>
            where
                E: serde::de::Error,
            {
                i32::try_from(v)
                    .ok()
                    .and_then(|x| x.try_into().ok())
                    .ok_or_else(|| {
                        serde::de::Error::invalid_value(serde::de::Unexpected::Unsigned(v), &self)
                    })
            }

            fn visit_str<E>(self, value: &str) -> std::result::Result<Self::Value, E>
            where
                E: serde::de::Error,
            {
                match value {
                    "COUNTRY_CODE_UNSPECIFIED" => Ok(CountryCode::Unspecified),
                    "COUNTRY_CODE_AC" => Ok(CountryCode::Ac),
                    "COUNTRY_CODE_AD" => Ok(CountryCode::Ad),
                    "COUNTRY_CODE_AE" => Ok(CountryCode::Ae),
                    "COUNTRY_CODE_AF" => Ok(CountryCode::Af),
                    "COUNTRY_CODE_AG" => Ok(CountryCode::Ag),
                    "COUNTRY_CODE_AI" => Ok(CountryCode::Ai),
                    "COUNTRY_CODE_AL" => Ok(CountryCode::Al),
                    "COUNTRY_CODE_AM" => Ok(CountryCode::Am),
                    "COUNTRY_CODE_AO" => Ok(CountryCode::Ao),
                    "COUNTRY_CODE_AQ" => Ok(CountryCode::Aq),
                    "COUNTRY_CODE_AR" => Ok(CountryCode::Ar),
                    "COUNTRY_CODE_AT" => Ok(CountryCode::At),
                    "COUNTRY_CODE_AU" => Ok(CountryCode::Au),
                    "COUNTRY_CODE_AW" => Ok(CountryCode::Aw),
                    "COUNTRY_CODE_AX" => Ok(CountryCode::Ax),
                    "COUNTRY_CODE_AZ" => Ok(CountryCode::Az),
                    "COUNTRY_CODE_BA" => Ok(CountryCode::Ba),
                    "COUNTRY_CODE_BB" => Ok(CountryCode::Bb),
                    "COUNTRY_CODE_BD" => Ok(CountryCode::Bd),
                    "COUNTRY_CODE_BE" => Ok(CountryCode::Be),
                    "COUNTRY_CODE_BF" => Ok(CountryCode::Bf),
                    "COUNTRY_CODE_BG" => Ok(CountryCode::Bg),
                    "COUNTRY_CODE_BH" => Ok(CountryCode::Bh),
                    "COUNTRY_CODE_BI" => Ok(CountryCode::Bi),
                    "COUNTRY_CODE_BJ" => Ok(CountryCode::Bj),
                    "COUNTRY_CODE_BL" => Ok(CountryCode::Bl),
                    "COUNTRY_CODE_BM" => Ok(CountryCode::Bm),
                    "COUNTRY_CODE_BN" => Ok(CountryCode::Bn),
                    "COUNTRY_CODE_BO" => Ok(CountryCode::Bo),
                    "COUNTRY_CODE_BQ" => Ok(CountryCode::Bq),
                    "COUNTRY_CODE_BR" => Ok(CountryCode::Br),
                    "COUNTRY_CODE_BS" => Ok(CountryCode::Bs),
                    "COUNTRY_CODE_BT" => Ok(CountryCode::Bt),
                    "COUNTRY_CODE_BV" => Ok(CountryCode::Bv),
                    "COUNTRY_CODE_BW" => Ok(CountryCode::Bw),
                    "COUNTRY_CODE_BY" => Ok(CountryCode::By),
                    "COUNTRY_CODE_BZ" => Ok(CountryCode::Bz),
                    "COUNTRY_CODE_CA" => Ok(CountryCode::Ca),
                    "COUNTRY_CODE_CD" => Ok(CountryCode::Cd),
                    "COUNTRY_CODE_CF" => Ok(CountryCode::Cf),
                    "COUNTRY_CODE_CG" => Ok(CountryCode::Cg),
                    "COUNTRY_CODE_CH" => Ok(CountryCode::Ch),
                    "COUNTRY_CODE_CI" => Ok(CountryCode::Ci),
                    "COUNTRY_CODE_CK" => Ok(CountryCode::Ck),
                    "COUNTRY_CODE_CL" => Ok(CountryCode::Cl),
                    "COUNTRY_CODE_CM" => Ok(CountryCode::Cm),
                    "COUNTRY_CODE_CN" => Ok(CountryCode::Cn),
                    "COUNTRY_CODE_CO" => Ok(CountryCode::Co),
                    "COUNTRY_CODE_CR" => Ok(CountryCode::Cr),
                    "COUNTRY_CODE_CV" => Ok(CountryCode::Cv),
                    "COUNTRY_CODE_CW" => Ok(CountryCode::Cw),
                    "COUNTRY_CODE_CY" => Ok(CountryCode::Cy),
                    "COUNTRY_CODE_CZ" => Ok(CountryCode::Cz),
                    "COUNTRY_CODE_DE" => Ok(CountryCode::De),
                    "COUNTRY_CODE_DJ" => Ok(CountryCode::Dj),
                    "COUNTRY_CODE_DK" => Ok(CountryCode::Dk),
                    "COUNTRY_CODE_DM" => Ok(CountryCode::Dm),
                    "COUNTRY_CODE_DO" => Ok(CountryCode::Do),
                    "COUNTRY_CODE_DZ" => Ok(CountryCode::Dz),
                    "COUNTRY_CODE_EC" => Ok(CountryCode::Ec),
                    "COUNTRY_CODE_EE" => Ok(CountryCode::Ee),
                    "COUNTRY_CODE_EG" => Ok(CountryCode::Eg),
                    "COUNTRY_CODE_EH" => Ok(CountryCode::Eh),
                    "COUNTRY_CODE_ER" => Ok(CountryCode::Er),
                    "COUNTRY_CODE_ES" => Ok(CountryCode::Es),
                    "COUNTRY_CODE_ET" => Ok(CountryCode::Et),
                    "COUNTRY_CODE_FI" => Ok(CountryCode::Fi),
                    "COUNTRY_CODE_FJ" => Ok(CountryCode::Fj),
                    "COUNTRY_CODE_FK" => Ok(CountryCode::Fk),
                    "COUNTRY_CODE_FO" => Ok(CountryCode::Fo),
                    "COUNTRY_CODE_FR" => Ok(CountryCode::Fr),
                    "COUNTRY_CODE_GA" => Ok(CountryCode::Ga),
                    "COUNTRY_CODE_GB" => Ok(CountryCode::Gb),
                    "COUNTRY_CODE_GD" => Ok(CountryCode::Gd),
                    "COUNTRY_CODE_GE" => Ok(CountryCode::Ge),
                    "COUNTRY_CODE_GF" => Ok(CountryCode::Gf),
                    "COUNTRY_CODE_GG" => Ok(CountryCode::Gg),
                    "COUNTRY_CODE_GH" => Ok(CountryCode::Gh),
                    "COUNTRY_CODE_GI" => Ok(CountryCode::Gi),
                    "COUNTRY_CODE_GL" => Ok(CountryCode::Gl),
                    "COUNTRY_CODE_GM" => Ok(CountryCode::Gm),
                    "COUNTRY_CODE_GN" => Ok(CountryCode::Gn),
                    "COUNTRY_CODE_GP" => Ok(CountryCode::Gp),
                    "COUNTRY_CODE_GQ" => Ok(CountryCode::Gq),
                    "COUNTRY_CODE_GR" => Ok(CountryCode::Gr),
                    "COUNTRY_CODE_GS" => Ok(CountryCode::Gs),
                    "COUNTRY_CODE_GT" => Ok(CountryCode::Gt),
                    "COUNTRY_CODE_GU" => Ok(CountryCode::Gu),
                    "COUNTRY_CODE_GW" => Ok(CountryCode::Gw),
                    "COUNTRY_CODE_GY" => Ok(CountryCode::Gy),
                    "COUNTRY_CODE_HK" => Ok(CountryCode::Hk),
                    "COUNTRY_CODE_HN" => Ok(CountryCode::Hn),
                    "COUNTRY_CODE_HR" => Ok(CountryCode::Hr),
                    "COUNTRY_CODE_HT" => Ok(CountryCode::Ht),
                    "COUNTRY_CODE_HU" => Ok(CountryCode::Hu),
                    "COUNTRY_CODE_ID" => Ok(CountryCode::Id),
                    "COUNTRY_CODE_IE" => Ok(CountryCode::Ie),
                    "COUNTRY_CODE_IL" => Ok(CountryCode::Il),
                    "COUNTRY_CODE_IM" => Ok(CountryCode::Im),
                    "COUNTRY_CODE_IN" => Ok(CountryCode::In),
                    "COUNTRY_CODE_IO" => Ok(CountryCode::Io),
                    "COUNTRY_CODE_IQ" => Ok(CountryCode::Iq),
                    "COUNTRY_CODE_IS" => Ok(CountryCode::Is),
                    "COUNTRY_CODE_IT" => Ok(CountryCode::It),
                    "COUNTRY_CODE_JE" => Ok(CountryCode::Je),
                    "COUNTRY_CODE_JM" => Ok(CountryCode::Jm),
                    "COUNTRY_CODE_JO" => Ok(CountryCode::Jo),
                    "COUNTRY_CODE_JP" => Ok(CountryCode::Jp),
                    "COUNTRY_CODE_KE" => Ok(CountryCode::Ke),
                    "COUNTRY_CODE_KG" => Ok(CountryCode::Kg),
                    "COUNTRY_CODE_KH" => Ok(CountryCode::Kh),
                    "COUNTRY_CODE_KI" => Ok(CountryCode::Ki),
                    "COUNTRY_CODE_KM" => Ok(CountryCode::Km),
                    "COUNTRY_CODE_KN" => Ok(CountryCode::Kn),
                    "COUNTRY_CODE_KR" => Ok(CountryCode::Kr),
                    "COUNTRY_CODE_KW" => Ok(CountryCode::Kw),
                    "COUNTRY_CODE_KY" => Ok(CountryCode::Ky),
                    "COUNTRY_CODE_LA" => Ok(CountryCode::La),
                    "COUNTRY_CODE_LB" => Ok(CountryCode::Lb),
                    "COUNTRY_CODE_LC" => Ok(CountryCode::Lc),
                    "COUNTRY_CODE_LI" => Ok(CountryCode::Li),
                    "COUNTRY_CODE_LK" => Ok(CountryCode::Lk),
                    "COUNTRY_CODE_LR" => Ok(CountryCode::Lr),
                    "COUNTRY_CODE_LS" => Ok(CountryCode::Ls),
                    "COUNTRY_CODE_LT" => Ok(CountryCode::Lt),
                    "COUNTRY_CODE_LU" => Ok(CountryCode::Lu),
                    "COUNTRY_CODE_LV" => Ok(CountryCode::Lv),
                    "COUNTRY_CODE_LY" => Ok(CountryCode::Ly),
                    "COUNTRY_CODE_MA" => Ok(CountryCode::Ma),
                    "COUNTRY_CODE_MC" => Ok(CountryCode::Mc),
                    "COUNTRY_CODE_MD" => Ok(CountryCode::Md),
                    "COUNTRY_CODE_ME" => Ok(CountryCode::Me),
                    "COUNTRY_CODE_MF" => Ok(CountryCode::Mf),
                    "COUNTRY_CODE_MG" => Ok(CountryCode::Mg),
                    "COUNTRY_CODE_MK" => Ok(CountryCode::Mk),
                    "COUNTRY_CODE_ML" => Ok(CountryCode::Ml),
                    "COUNTRY_CODE_MM" => Ok(CountryCode::Mm),
                    "COUNTRY_CODE_MN" => Ok(CountryCode::Mn),
                    "COUNTRY_CODE_MO" => Ok(CountryCode::Mo),
                    "COUNTRY_CODE_MQ" => Ok(CountryCode::Mq),
                    "COUNTRY_CODE_MR" => Ok(CountryCode::Mr),
                    "COUNTRY_CODE_MS" => Ok(CountryCode::Ms),
                    "COUNTRY_CODE_MT" => Ok(CountryCode::Mt),
                    "COUNTRY_CODE_MU" => Ok(CountryCode::Mu),
                    "COUNTRY_CODE_MV" => Ok(CountryCode::Mv),
                    "COUNTRY_CODE_MW" => Ok(CountryCode::Mw),
                    "COUNTRY_CODE_MX" => Ok(CountryCode::Mx),
                    "COUNTRY_CODE_MY" => Ok(CountryCode::My),
                    "COUNTRY_CODE_MZ" => Ok(CountryCode::Mz),
                    "COUNTRY_CODE_NA" => Ok(CountryCode::Na),
                    "COUNTRY_CODE_NC" => Ok(CountryCode::Nc),
                    "COUNTRY_CODE_NE" => Ok(CountryCode::Ne),
                    "COUNTRY_CODE_NG" => Ok(CountryCode::Ng),
                    "COUNTRY_CODE_NI" => Ok(CountryCode::Ni),
                    "COUNTRY_CODE_NL" => Ok(CountryCode::Nl),
                    "COUNTRY_CODE_NO" => Ok(CountryCode::No),
                    "COUNTRY_CODE_NP" => Ok(CountryCode::Np),
                    "COUNTRY_CODE_NR" => Ok(CountryCode::Nr),
                    "COUNTRY_CODE_NU" => Ok(CountryCode::Nu),
                    "COUNTRY_CODE_NZ" => Ok(CountryCode::Nz),
                    "COUNTRY_CODE_OM" => Ok(CountryCode::Om),
                    "COUNTRY_CODE_PA" => Ok(CountryCode::Pa),
                    "COUNTRY_CODE_PE" => Ok(CountryCode::Pe),
                    "COUNTRY_CODE_PF" => Ok(CountryCode::Pf),
                    "COUNTRY_CODE_PG" => Ok(CountryCode::Pg),
                    "COUNTRY_CODE_PH" => Ok(CountryCode::Ph),
                    "COUNTRY_CODE_PK" => Ok(CountryCode::Pk),
                    "COUNTRY_CODE_PL" => Ok(CountryCode::Pl),
                    "COUNTRY_CODE_PM" => Ok(CountryCode::Pm),
                    "COUNTRY_CODE_PN" => Ok(CountryCode::Pn),
                    "COUNTRY_CODE_PR" => Ok(CountryCode::Pr),
                    "COUNTRY_CODE_PS" => Ok(CountryCode::Ps),
                    "COUNTRY_CODE_PT" => Ok(CountryCode::Pt),
                    "COUNTRY_CODE_PY" => Ok(CountryCode::Py),
                    "COUNTRY_CODE_QA" => Ok(CountryCode::Qa),
                    "COUNTRY_CODE_RE" => Ok(CountryCode::Re),
                    "COUNTRY_CODE_RO" => Ok(CountryCode::Ro),
                    "COUNTRY_CODE_RS" => Ok(CountryCode::Rs),
                    "COUNTRY_CODE_RU" => Ok(CountryCode::Ru),
                    "COUNTRY_CODE_RW" => Ok(CountryCode::Rw),
                    "COUNTRY_CODE_SA" => Ok(CountryCode::Sa),
                    "COUNTRY_CODE_SB" => Ok(CountryCode::Sb),
                    "COUNTRY_CODE_SC" => Ok(CountryCode::Sc),
                    "COUNTRY_CODE_SE" => Ok(CountryCode::Se),
                    "COUNTRY_CODE_SG" => Ok(CountryCode::Sg),
                    "COUNTRY_CODE_SH" => Ok(CountryCode::Sh),
                    "COUNTRY_CODE_SI" => Ok(CountryCode::Si),
                    "COUNTRY_CODE_SJ" => Ok(CountryCode::Sj),
                    "COUNTRY_CODE_SK" => Ok(CountryCode::Sk),
                    "COUNTRY_CODE_SL" => Ok(CountryCode::Sl),
                    "COUNTRY_CODE_SM" => Ok(CountryCode::Sm),
                    "COUNTRY_CODE_SN" => Ok(CountryCode::Sn),
                    "COUNTRY_CODE_SO" => Ok(CountryCode::So),
                    "COUNTRY_CODE_SR" => Ok(CountryCode::Sr),
                    "COUNTRY_CODE_SS" => Ok(CountryCode::Ss),
                    "COUNTRY_CODE_ST" => Ok(CountryCode::St),
                    "COUNTRY_CODE_SV" => Ok(CountryCode::Sv),
                    "COUNTRY_CODE_SX" => Ok(CountryCode::Sx),
                    "COUNTRY_CODE_SZ" => Ok(CountryCode::Sz),
                    "COUNTRY_CODE_TA" => Ok(CountryCode::Ta),
                    "COUNTRY_CODE_TC" => Ok(CountryCode::Tc),
                    "COUNTRY_CODE_TD" => Ok(CountryCode::Td),
                    "COUNTRY_CODE_TF" => Ok(CountryCode::Tf),
                    "COUNTRY_CODE_TG" => Ok(CountryCode::Tg),
                    "COUNTRY_CODE_TH" => Ok(CountryCode::Th),
                    "COUNTRY_CODE_TJ" => Ok(CountryCode::Tj),
                    "COUNTRY_CODE_TK" => Ok(CountryCode::Tk),
                    "COUNTRY_CODE_TL" => Ok(CountryCode::Tl),
                    "COUNTRY_CODE_TM" => Ok(CountryCode::Tm),
                    "COUNTRY_CODE_TN" => Ok(CountryCode::Tn),
                    "COUNTRY_CODE_TO" => Ok(CountryCode::To),
                    "COUNTRY_CODE_TR" => Ok(CountryCode::Tr),
                    "COUNTRY_CODE_TT" => Ok(CountryCode::Tt),
                    "COUNTRY_CODE_TV" => Ok(CountryCode::Tv),
                    "COUNTRY_CODE_TW" => Ok(CountryCode::Tw),
                    "COUNTRY_CODE_TZ" => Ok(CountryCode::Tz),
                    "COUNTRY_CODE_UA" => Ok(CountryCode::Ua),
                    "COUNTRY_CODE_UG" => Ok(CountryCode::Ug),
                    "COUNTRY_CODE_US" => Ok(CountryCode::Us),
                    "COUNTRY_CODE_UY" => Ok(CountryCode::Uy),
                    "COUNTRY_CODE_UZ" => Ok(CountryCode::Uz),
                    "COUNTRY_CODE_VA" => Ok(CountryCode::Va),
                    "COUNTRY_CODE_VC" => Ok(CountryCode::Vc),
                    "COUNTRY_CODE_VE" => Ok(CountryCode::Ve),
                    "COUNTRY_CODE_VG" => Ok(CountryCode::Vg),
                    "COUNTRY_CODE_VN" => Ok(CountryCode::Vn),
                    "COUNTRY_CODE_VU" => Ok(CountryCode::Vu),
                    "COUNTRY_CODE_WF" => Ok(CountryCode::Wf),
                    "COUNTRY_CODE_WS" => Ok(CountryCode::Ws),
                    "COUNTRY_CODE_XK" => Ok(CountryCode::Xk),
                    "COUNTRY_CODE_YE" => Ok(CountryCode::Ye),
                    "COUNTRY_CODE_YT" => Ok(CountryCode::Yt),
                    "COUNTRY_CODE_ZA" => Ok(CountryCode::Za),
                    "COUNTRY_CODE_ZM" => Ok(CountryCode::Zm),
                    "COUNTRY_CODE_ZW" => Ok(CountryCode::Zw),
                    "COUNTRY_CODE_ZZ" => Ok(CountryCode::Zz),
                    _ => Err(serde::de::Error::unknown_variant(value, FIELDS)),
                }
            }
        }
        deserializer.deserialize_any(GeneratedVisitor)
    }
}
